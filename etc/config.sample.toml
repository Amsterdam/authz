### OAuth 2.0 service configuration file

bind-address = ":8080"
# Bind address for the HTTP service

url = "http://localhost:8080/"
# Base URL of the service.

[accesstoken]
secret = "makemehardtoguess"
# Secret used to sign (HMAC-SHA256) access and refresh tokens.
lifetime = 36000
# Lifetime of access tokens


[storage]
# Storage backend configuration.
# * If none is enabled the built-in in-memory storage backend will be used.
#   This back-end should only be used in single-instance deployments.
# * If more than one is enabled then the server will refuse to start.

  ## Connection params for Redis. An empty password won't AUTH.
  # [storage.redis]
  # address = ":6379"
  # password = ""


[idp]
# IdP configuration.
# * If none is enabled the built-in anonymous IdP will be used. This IdP should
#   only be used for testing.

  # [idp.datapunt]
  # url = "https://api.data.amsterdam.nl/auth/idp/login"
  # secret = "atleast16characters"
  # roles-url = "https://acc.api.data.amsterdam.nl/authz_admin/accounts/"


[client]
# OAuth 2.0 clients. Require client-id, granttype and redirects.

  [client."citydata-data.amsterdam.nl"]
  redirects = ["http://localhost:8080/"]
  granttype = "token"  # "code"  | "token" | "client_credentials"


[authorization]
# Authorization configuration.

  [authorization.datapunt]
  # Schemaless optional configuration for our authz provider.
  base-url = "https://acc.api.data.amsterdam.nl/authz_admin/"

